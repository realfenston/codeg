<fim_prefix>// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: team_pool.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace PlatformHotfix {

  #region Messages
  public partial class PoolReq : ViewModel {
    private static readonly pb::MessageParser<PoolReq> _parser = new pb::MessageParser<PoolReq>(() => (PoolReq)MessagePool.Instance.Fetch(typeof(PoolReq)));
    public static pb::MessageParser<PoolReq> Parser { get { return _parser; } }

    private PropertyValue<string> teamId_;
    public PropertyValue<string> TeamId {
      get { return teamId_; }
      set {
        teamId_ = value;
      }
    }

    public override void WriteTo(pb::CodedOutputStream output) {
      if (!string.IsNullOrEmpty(TeamId.Value)) {
        output.WriteRawTag(10);
        output.WriteString(TeamId.Value);
      }
    }

    public override int CalculateSize() {
      int size = 0;
      if (!string.IsNullOrEmpty(TeamId.Value)) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamId.Value);
      }
      return size;
    }

    public override void MergeFrom(pb::CodedInputStream input) {
      ResetDefaults();
      uint tag;
      while ((tag = input.ReadTag())!= 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            TeamId.Value = input.ReadString();
            break;
          }
        }
      }
    }

    public override void ResetDefaults() {
      ///<fim_suffix>Id = new PropertyValue<string>(this,"TeamId");
      BindOther();
    }

    protected override void FillProperties(System.Collections.Generic.List<ViewModelPropertyInfo> list){
      list.Add(new ViewModelPropertyInfo(TeamId)); 
      FillOtherProperties(list);
    }

    protected override void FillCommands(System.Collections.Generic.List<ViewModelCommandInfo> list)
    {
      FillOtherCommands(list); 
    }
    partial void BindOther();
    partial void FillOtherProperties(System.Collections.Generic.List<ViewModelPropertyInfo> list);
    partial void FillOtherCommands(System.Collections.Generic.List<ViewModelCommandInfo> list);
  }

  public partial class PoolRes : ViewModel {
    private static readonly pb::MessageParser<PoolRes> _parser = new pb::MessageParser<PoolRes>(() => (PoolRes)MessagePool.Instance.Fetch(typeof(PoolRes)));
    public static pb::MessageParser<PoolRes> Parser { get { return _parser; } }

    private PropertyValue<int> ret_;
    public PropertyValue<int> Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    private static readonly pb::FieldCodec<int> _repeated_playerId_codec
        = pb::FieldCodec.ForSInt32(18);
    private ModelCollection<int> playerId_;
    public ModelCollection<int> PlayerId {
      get { return playerId_; }
      set { playerId_ = value; }
    }

    public override void WriteTo(pb::CodedOutputStream output) {
      if (Ret.Value!= 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Ret.Value);
      }
      playerId_.WriteTo(output, _repeated_playerId_codec);
    }

    public override int CalculateSize() {
      int size = 0;
      if (Ret.Value!= 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ret.Value);
      }
      size += playerId_.CalculateSize(_repeated_playerId_codec);
      return size;
    }

    public override void MergeFrom(pb::CodedInputStream input) {
      ResetDefaults();
      uint tag;
      while ((tag = input.ReadTag())!= 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ret.Value = input.ReadSInt32();
            break;
          }
          case 18:
          case 16: {
            playerId_.AddEntriesFrom(input, _repeated_playerId_codec);
            break;
          }
        }
      }
    }

    public override void ResetDefaults() {
      ///ret
      ret_.Value = 0;
      playerId_.Clear();
    }

    public override void Bind(){
      Ret = new PropertyValue<int>(this,"Ret");
      PlayerId = new ModelCollection<int>(this,"PlayerId");
      BindOther();
    }

    protected override void FillProperties(System.Collections.Generic.List<ViewModelPropertyInfo> list){
      list.Add(new ViewModelPropertyInfo(Ret)); 
      list.Add(new ViewModelPropertyInfo(PlayerId)); 
      FillOtherProperties(list);
    }

    protected override void FillCommands(System.Collections.Generic.List<ViewModelCommandInfo> list)
    {
      FillOtherCommands(list); 
    }
    partial void BindOther();
    partial void FillOtherProperties(System.Collections.Generic.List<ViewModelPropertyInfo> list);
    partial void FillOtherCommands(System.Collections.Generic.List<ViewModelCommandInfo> list);
  }

  #endregion

}

#endregion Designer generated code
<fim_middle>team_id
      teamId_.Value = "";
    }

    public override void Bind(){
      Team<|endoftext|>